.TH "Test" 3 "Mon Mar 11 2013" "Version 0.1" "Life -- Fight!" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Test \- 
.PP
A test class\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBAs\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBTEnum\fP { \fBTVal1\fP, \fBTVal2\fP, \fBTVal3\fP }"
.br
.RI "\fIAn enum\&. \fP"
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTest\fP ()"
.br
.RI "\fIA constructor\&. \fP"
.ti -1c
.RI "\fB~Test\fP ()"
.br
.RI "\fIA destructor\&. \fP"
.ti -1c
.RI "int \fBtestMe\fP (int a, const char *s)"
.br
.RI "\fIa normal member taking two arguments and returning an integer value\&. \fP"
.ti -1c
.RI "virtual void \fBtestMeToo\fP (char c1, char c2)=0"
.br
.RI "\fIA pure virtual member\&. \fP"
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "enum \fBTest::TEnum\fP * \fBenumPtr\fP"
.br
.RI "\fIenum pointer\&. \fP"
.ti -1c
.RI "enum \fBTest::TEnum\fP \fBenumVar\fP"
.br
.RI "\fIenum variable\&. \fP"
.ti -1c
.RI "int \fBpublicVar\fP"
.br
.RI "\fIa public variable\&. \fP"
.ti -1c
.RI "int(* \fBhandler\fP )(int a, int b)"
.br
.RI "\fIa function variable\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
A test class\&. 

A more elaborate class description\&. 
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBTest::TEnum\fP"

.PP
An enum\&. More detailed enum description\&. 
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fITVal1 \fP\fP
enum value TVal1\&. 
.TP
\fB\fITVal2 \fP\fP
enum value TVal2\&. 
.TP
\fB\fITVal3 \fP\fP
enum value TVal3\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Test::Test ()"

.PP
A constructor\&. A more elaborate description of the constructor\&. 
.SS "Test::~Test ()"

.PP
A destructor\&. A more elaborate description of the destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "int Test::testMe (inta, const char *s)"

.PP
a normal member taking two arguments and returning an integer value\&. \fBParameters:\fP
.RS 4
\fIa\fP an integer argument\&. 
.br
\fIs\fP a constant character pointer\&. 
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBTest()\fP 
.PP
\fB~Test()\fP 
.PP
\fBtestMeToo()\fP 
.PP
\fBpublicVar()\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
The test results 
.RE
.PP

.SS "virtual void Test::testMeToo (charc1, charc2)\fC [pure virtual]\fP"

.PP
A pure virtual member\&. \fBSee Also:\fP
.RS 4
\fBtestMe()\fP 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIc1\fP the first argument\&. 
.br
\fIc2\fP the second argument\&. 
.RE
.PP

.PP
Implemented in \fBAs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "enum \fBTest::TEnum\fP 
       * Test::enumPtr"

.PP
enum pointer\&. Details\&. 
.SS "enum \fBTest::TEnum\fP
        Test::enumVar"

.PP
enum variable\&. Details\&. 
.SS "int(* Test::handler)(int a, int b)"

.PP
a function variable\&. Details\&. 
.SS "int Test::publicVar"

.PP
a public variable\&. Details\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Life -- Fight! from the source code\&.
